plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}


def keystorePropertiesFile = rootProject.file("key.properties")
def keystoreProperties = new Properties()
def configured = true
try {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
} catch (IOException e) {
    configured = false
    logger.error('Release signing information not found.')
}

// def keystoreProperties = new Properties()
// def keystorePropertiesFile = rootProject.file('key.properties')
// if (keystorePropertiesFile.exists()) {
//     keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
// }

project.ext {
    // TODO(YOU): Create release keys and a `keystore.properties` file. See
    // `example/README.md` for more info and `keystore.example.properties` for an
    // example.
    KEYSTORE_STORE_FILE = configured ? rootProject.file(keystoreProperties['storeFile']) : null
    KEYSTORE_STORE_PASSWORD = keystoreProperties['storePassword']
    KEYSTORE_KEY_ALIAS = keystoreProperties['keyAlias']
    KEYSTORE_KEY_PASSWORD = keystoreProperties['keyPassword']
    // VERSION_CODE = configured ? keystoreProperties['versionCode'].toInteger() : 16
    // VERSION_NAME = configured ? keystoreProperties['versionName'] : "1.0.0"
}

android {
    signingConfigs {
        release {
            storeFile KEYSTORE_STORE_FILE
            storePassword KEYSTORE_STORE_PASSWORD
            keyAlias KEYSTORE_KEY_ALIAS
            keyPassword KEYSTORE_KEY_PASSWORD
        }
    }

    namespace "com.example.aibot"
    compileSdkVersion 33 //flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.caris.aibot"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 21
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger() //20
        versionName flutterVersionName //"1.0.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    // implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    // implementation 'com.google.android.gms:play-services-ads:21.5.0'
    // implementation 'com.stripe:stripe-android:20.19.5'
    implementation 'com.android.support:multidex:2.0.1'
    // implementation 'androidx.core:core-splashscreen:1.0.0-beta02'
    implementation 'com.android.billingclient:billing:4.0.0'
    // // Import the BoM for the Firebase platform
    // implementation(platform("com.google.firebase:firebase-bom:32.7.1"))

    // // Add the dependency for the Firebase Authentication library
    // // When using the BoM, you don't specify versions in Firebase library dependencies
    // implementation("com.google.firebase:firebase-auth")
}
